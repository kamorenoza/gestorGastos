{"version":3,"file":"js/814-legacy.bb89928d.js","mappings":"0JAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,UAAUC,MAAMP,EAAIQ,UAAU,CAACJ,EAAG,KAAK,CAACE,YAAY,cAAc,CAACN,EAAIS,GAAGT,EAAIU,GAAGV,EAAIW,UAAWX,EAAa,UAAEI,EAAG,SAAS,CAACE,YAAY,iBAAiBM,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOb,EAAIc,UAAUd,EAAIe,cAAc,CAACX,EAAG,SAAS,CAACY,MAAM,CAAC,KAAO,iBAAiB,GAAGhB,EAAIiB,KAAMjB,EAAkB,eAAEI,EAAG,SAAS,CAACE,YAAY,uEAAuEM,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOb,EAAIc,UAAUd,EAAIkB,mBAAmB,CAAClB,EAAIS,GAAG,OAAOT,EAAIiB,KAAMjB,EAAqB,kBAAEI,EAAG,SAAS,CAACE,YAAY,uEAAuEM,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOb,EAAImB,uBAAuB,CAACnB,EAAIS,GAAG,OAAOT,EAAIiB,QACxyBG,EAAkB,GCsBtB,GACAC,KAAAA,eAEAC,MAAAA,CACAX,MAAAA,CACAY,KAAAA,OACAC,QAAAA,IAGAT,UAAAA,CACAQ,KAAAA,OACAC,QAAAA,IAGAN,eAAAA,CACAK,KAAAA,OACAC,QAAAA,IAGAL,kBAAAA,CACAI,KAAAA,WAIAE,SAAAA,CACAjB,SADA,WAEA,0CAIAkB,QAAAA,CACAZ,UADA,SACAa,GACA,wBCvDiR,I,UCO7QC,GAAY,OACd,EACA7B,EACAqB,GACA,EACA,KACA,KACA,MAIF,EAAeQ,EAAiB,S,iRClBXC,G,SAAAA,WAenB,WAAaC,EAAQC,EAAaC,EAAUC,EAAMC,EAAOC,EAAMC,EAAQC,EAAad,EAAMe,IAAS,iCAd9F,KAc8F,qBAb1F,IAa0F,0BAZrF,KAYqF,uBAXxF,KAWwF,mBAV5F,KAU4F,oBAT5F,IAS4F,qBAR3F,IAQ2F,sBAP1F,IAO0F,2BANrF,IAMqF,uBALxF,KAKwF,mBAJ5F,WAI4F,uBAHxF,KAGwF,sBAFzF,MAGRrC,KAAK6B,OAASA,EAAOS,QAAQ,IAAK,IAClCtC,KAAK8B,YAAcA,EACnB9B,KAAK+B,SAAWA,EAChB/B,KAAKgC,KAAOA,EACZhC,KAAKkC,KAAOA,EACZlC,KAAKiC,MAAQA,EACbjC,KAAKmC,OAASA,EACdnC,KAAKoC,YAAcA,EACnBpC,KAAKsB,KAAOA,EACZtB,KAAKqC,QAAUA,E,oCAUjB,WACE,OAAOrC,KAAKuC,K,mBAGd,SAAOA,GAGL,OAFAvC,KAAKuC,GAAKA,EAEHvC,O,uBAGT,WACE,OAAOA,KAAK6B,S,4BAGd,WACE,OAAO7B,KAAK8B,c,yBAGd,WACE,OAAO9B,KAAK+B,W,qBAGd,WACE,OAAO/B,KAAKgC,O,sBAGd,WACE,MAAqB,WAAdhC,KAAKsB,O,oBAGd,WACE,OAAOtB,KAAKkC,O,qBAGd,SAASA,GAGP,OAFAlC,KAAKkC,KAAOA,EAELlC,O,qBAGT,WACE,OAAOA,KAAKiC,Q,sBAGd,WACE,OAAOjC,KAAKmC,S,4BAGd,WACE,OAAOnC,KAAKoC,c,qBAGd,SAASI,GAGP,OAFAxC,KAAKyC,KAAOD,EAELxC,O,yBAGT,WACE,OAAOA,KAAK0C,W,yBAGd,SAAaC,GAGX,OAFA3C,KAAK0C,SAAWC,EAET3C,O,2BAGT,SAAe4C,GACb,IAAMC,EAAgB,CACpBhB,OAAQ7B,KAAK6B,OAAOiB,WAAWR,QAAQ,IAAK,IAC5CR,YAAa9B,KAAK8B,YAClBC,SAAU/B,KAAK+B,SAASgB,eAAc,GACtCf,KAAMhC,KAAKgC,KACXE,KAAMlC,KAAKkC,KACXD,MAAOjC,KAAKiC,MACZE,OAAQnC,KAAKmC,OACbM,KAAMzC,KAAKyC,KACXnB,KAAMtB,KAAKsB,KACXe,QAAS,MAgBX,OAbIrC,KAAKqC,UACPQ,EAAcR,QAAUrC,KAAKqC,QAAQU,eAAc,IAGjD/C,KAAKmC,SACPU,EAAcT,YAAcpC,KAAKoC,cAE/BpC,KAAKiC,OAASjC,KAAKmC,UACrBU,EAAcH,SAAW1C,KAAK0C,SAC9BG,EAAcG,SAAWhD,KAAKgD,UAE5BJ,IAAQC,EAAcN,GAAKvC,KAAKuC,IAE7BM,K,+BAtGT,SAAyBI,EAAMV,GAC7B,IAAMW,EAAU,IAAItB,EAAQqB,EAAKpB,OAAQoB,EAAKnB,YAAamB,EAAKlB,SAAUkB,EAAKjB,KAAMiB,EAAKhB,MAAOgB,EAAKf,KAAMe,EAAKd,OAAQc,EAAKb,YAAaa,EAAK3B,KAAM2B,EAAKZ,SAG3J,OAFIE,GAAIW,EAAQC,MAAMZ,GAEfW,M,EAhCUtB,I,mICQAwB,EAAAA,WAMnB,cAAe,2LACb,IAAIX,EAAOY,KAAKC,MAAMC,aAAaC,QAAQ,gBAC3Cf,EAAOA,EAAKD,OAEZ,OAAAxC,KAAA,EAA0B,IAAIyD,EAAAA,EAAkBhB,KAChD,OAAAzC,KAAA,EAAmB,IAAI0D,EAAAA,EAAWjB,KAClC,OAAAzC,KAAA,EAAmB,IAAI2D,EAAAA,IACvB,OAAA3D,KAAA,EAAayC,G,kFAGf,WAAkBmB,EAAW9B,EAAaC,EAAUC,EAAM6B,EAAc3B,EAAMC,EAAQ2B,EAAOxC,EAAMe,GAAnG,0FACQR,EAAS+B,EAAUG,WAAW,IAAK,IACnCC,EAAUC,EAAAA,EAAAA,MAAAA,cAAAA,gBACVC,EAAkBF,EAAQG,SAC5BjC,IAAMA,EAAOkC,EAAAA,EAAAA,kBAEXlB,EAAU,IAAItB,EAAQC,EAAQC,EAAaC,EAAUC,EAAM6B,EAAc3B,EAAMC,EAAQ2B,EAAOxC,EAAMe,GAC1Ga,EAAQmB,SAAR,OAAgBrE,KAAhB,IAEImC,GAAQe,EAAQoB,YAAYtE,KAAKuE,kBAAkB1C,EAAQK,EAAMF,EAAM8B,IAAQU,SAAQ,GACvFtC,GAAQ2B,GACVX,EAAQsB,SAAQ,GACbF,YAAY,CAAC,CAAEG,OAAQ,EAAG5C,OAAAA,EAAQG,KAAAA,EAAME,MAAM,KAEnDgB,EAAQC,MAAMuB,KAAKC,OAEnBT,EAAgBU,QAAQ1B,EAAQH,eAAc,IAC9CiB,EAAQa,YAAYX,GAjBtB,qBAoBU,OAAAlE,KAAA,GAAwB8E,cAAcd,EAAQjB,gBAAiBiB,EAAQe,SApBjF,eAqBI,OAAA/E,KAAA,GAAwBgF,qBAAqBhB,EAAQjB,gBAAiBiB,EAAQe,UAE9E,OAAA/E,KAAA,GAAiBiF,gBAvBrB,kBAyBW,0BAzBX,sCA2BIC,QAAQC,MAAR,MA3BJ,2D,8IA+BA,WAAmBC,EAAeC,EAAcnD,EAAMoD,GAAtD,gGACMpD,IAAMA,EAAOkC,EAAAA,EAAAA,kBACXJ,EAAUC,EAAAA,EAAAA,MAAAA,cAAAA,gBACVsB,EAAStB,EAAAA,EAAAA,MAAAA,cAAAA,cACTE,EAAWH,EAAQG,SAEzBA,EAASqB,SAAQ,SAACtC,EAASuC,GACrBvC,EAAQX,KAAO6C,EAAc7C,KAC3B6C,EAAcnD,MACZC,EAAMiC,EAASsB,GAAO/C,SAASgD,KAAK,CAAE1D,KAAMuD,EAAQrD,MAAM,EAAML,OAAQqB,EAAQrB,SAC/EsC,EAASsB,GAAO/C,SAASiD,OAAON,EAAc,GAC1CD,EAAcjD,OAAQgC,EAASsB,GAAO/C,SAAS2C,GAAcnD,KAAOA,EAE1EiC,EAASsB,GAAOvD,KAAOA,MAI5BkD,EAAc/C,UACVuD,EAAeN,EAASO,WAAU,SAAAxD,GAAO,OAAIA,EAAQE,KAAO6C,EAAc/C,QAAQE,OAClE,IAAlBqD,IACIE,EAAaR,EAASM,GACtBG,EAAqC,WAAvBX,EAAc9D,KAAoB,QAAU,SAE5DY,GACF,OAAAlC,KAAA,GAAiBgG,WACfZ,EAAcvD,OACduD,EAActD,YACdsD,EAAcrD,SACdwD,EACAQ,EACAD,EACAV,EAAc7C,KAGV0D,EAASH,EAAW3B,SAAS0B,WAAU,SAAAxD,GAAO,OAAIA,EAAQ6D,YAAcd,EAAc7C,OAC5E,IAAZ0D,IACF,OAAAjG,KAAA,GAAiBmG,cAAcL,EAAW3B,SAAS8B,GAASH,MAMpE9B,EAAQa,YAAYV,GA1CtB,oBA6CU,OAAAnE,KAAA,GAAwB8E,cAAcd,EAAQjB,gBAAiBiB,EAAQe,SA7CjF,eA8CI,OAAA/E,KAAA,GAAwBgF,qBAAqBhB,EAAQjB,gBAAiBiB,EAAQe,UAE9E,OAAA/E,KAAA,GAAiBiF,gBAhDrB,mBAkDW,GAlDX,qCAoDIC,QAAQC,MAAR,MApDJ,0D,kIAwDA,WAAmBC,EAAeC,EAAczB,EAAW9B,EAAaC,EAAUC,EAAM6B,EAAc3B,EAAMC,EAAQ2B,EAAOsC,EAAa/D,GAAxI,iGACQR,EAAS+B,EAAUG,WAAW,IAAK,IACnCC,EAAUC,EAAAA,EAAAA,MAAAA,cAAAA,gBACVsB,EAAStB,EAAAA,EAAAA,MAAAA,cAAAA,cACTE,EAAWH,EAAQG,SAEzBA,EAASqB,SAAQ,SAACtC,EAASuC,GACzB,GAAIvC,EAAQX,KAAO6C,EAAc7C,GAAI,CAMnC,GALA6C,EAActD,YAAcA,EAC5BsD,EAAcrD,SAAWA,EAASgB,cAAgBhB,EAASgB,eAAc,GAAQhB,EACjFqD,EAAcpD,KAAOA,EACrBoD,EAAc/C,QAAUA,GAAWA,EAAQU,cAAgBV,EAAQU,eAAc,GAAQ,KAErFc,GAAgB1B,EAAQ,CAC1B,IAAIa,EAAWoC,EAAcpC,SAEzBqD,EAAWjC,EAAAA,EAAAA,YAAkBmB,GAC7Ba,IAAaC,EAAWjC,EAAAA,EAAAA,YAAkBpC,IAE9C,IAAMsE,EAAc,CAAEtE,KAAMqE,EAAUxE,OAAAA,GAEtC,GAAIuE,EACFpD,EAAW,GACXA,EAAS0C,KAAKY,OACT,CACL,IAAMb,EAAQzC,EAAS6C,WAAU,SAAAU,GAAI,OAAIA,EAAKvE,OAASqE,MACxC,IAAXZ,EAAczC,EAASyC,GAASa,EAC/BtD,EAAS0C,KAAKY,GAGrB,IAAME,EAAc,GACpBxD,EAASwC,SAAQ,SAAAiB,GACXC,IAAOD,EAASzE,MAAM2E,eAAeN,IAAWG,EAAYd,KAAKe,MAGvErB,EAAcpC,SAAWwD,EAG3B,GAAIrE,GAAU2B,IAAUsB,EAActB,MAAO,CAC3C,IAAMpB,EAAW0C,EAAc1C,SAE/B0C,EAAchD,YAAc0B,EAC5B,IAAM8C,EAAiB,EAAKrC,kBAAkB1C,GAAQ,EAAOG,EAAM8B,GAEnE8C,EAAepB,SAAQ,SAACqB,EAASC,GAC/B,IAAMC,EAAW3C,EAAAA,EAAAA,YAAkByC,EAAQ7E,MACrCgF,EAAU5C,EAAAA,EAAAA,WAAiByC,EAAQ7E,MAEnCyD,EAAQ/C,EAASmD,WAAU,SAAAoB,GAAG,OAAIP,IAAOO,EAAIjF,MAAMkF,UAAUH,EAAUC,OAASG,EAAW,UAClF,IAAX1B,IAAcmB,EAAeE,GAAa5E,KAAOQ,EAAS+C,GAAOvD,SAGvEkD,EAAc1C,SAAWkE,EAGtBzE,GAAW0B,IACduB,EAAcvD,OAASA,GAGzBsC,EAASsB,GAASL,MAItBpB,EAAQa,YAAYV,GA/DtB,mBAkEU,OAAAnE,KAAA,GAAwB8E,cAAcd,EAAQjB,gBAAiBiB,EAAQe,SAlEjF,QAmEI,OAAA/E,KAAA,GAAwBgF,qBAAqBhB,EAAQjB,gBAAiBiB,EAAQe,UAE9E,OAAA/E,KAAA,GAAiBiF,gBArErB,qDAuEIC,QAAQC,MAAR,MAvEJ,0D,oJA2EA,WAAqBgB,EAAeiB,GAApC,0FACQpD,EAAUC,EAAAA,EAAAA,MAAAA,cAAAA,gBACVsB,EAAStB,EAAAA,EAAAA,MAAAA,cAAAA,cACTE,EAAWH,EAAQG,SAEnBsB,EAAQtB,EAAS0B,WAAU,SAAA3C,GAAO,OAAIA,EAAQX,KAAO4D,EAAc5D,MAErE6E,EACFjD,EAASwB,OAAOF,EAAO,IAEvBU,EAAcjE,KAAOqD,EACrBpB,EAASsB,GAASU,GAGpBnC,EAAQa,YAAYV,GAdtB,mBAiBU,OAAAnE,KAAA,GAAwB8E,cAAcd,EAAQjB,gBAAiBiB,EAAQe,SAjBjF,cAkBI,OAAA/E,KAAA,GAAwBgF,qBAAqBhB,EAAQjB,gBAAiBiB,EAAQe,UAE9E,OAAA/E,KAAA,GAAiBiF,gBApBrB,mBAsBW,GAtBX,qCAwBIC,QAAQC,MAAR,MAxBJ,0D,2FA4BA,SAAmBtD,EAAQK,EAAMmF,EAAavD,GAI5C,IAHA,IAAMpB,EAAW,CAAC,CAAE+B,OAAQ,EAAG5C,OAAAA,EAAQG,KAAMqF,EAAanF,KAAAA,IACtDF,EAAOqF,EAEF5B,EAAQ,EAAGA,EAAQ3B,EAAO2B,IAAS,CAC1C,IAAM6B,EAAUlD,EAAAA,EAAAA,UAAgBpC,EAAM,GACtCU,EAASgD,KAAK,CACZjB,OAAQgB,EAAQ,EAChB5D,OAAAA,EACAG,KAAMsF,EACNpF,MAAM,IAGRF,EAAOsF,EAGT,OAAO5E,M,EA9NUU,I,0FCNAmE,EAAAA,W,kEACnB,SAAQC,GACN,OAAOC,EAAAA,WAAAA,KAASD,K,qBAGlB,SAASA,GAAkC,IAAzB9G,EAAyB,uDAAjB,gBACxB,OAAO+G,EAAAA,WAAAA,KAAS,CACd/G,MAAOA,EACPgH,KAAMF,EACNlG,KAAM,UACNqG,kBAAkB,EAClBC,kBAAmB,UACnBC,gBAAgB,M,0BAIpB,SAAcC,EAASC,GAAkF,IAAzErH,EAAyE,uDAAjE,wBAAyBsH,EAAwC,uDAA/B,UAAWC,EAAoB,uDAAX,UAC5F,OAAOR,EAAAA,WAAAA,KAAS,CACd/G,MAAOA,EACPY,KAAM,GACN4G,gBAAgB,EAChBP,kBAAkB,EAClBQ,mBAAoBH,EACpBJ,kBAAmBE,EACnBM,eAAgBL,EAChBM,gBAAiBJ,EACjBK,iBAAkB,iB,EA1BHf","sources":["webpack://gestor-gastos/./src/shared/components/TitleGeneral.vue?4e9c","webpack://gestor-gastos/src/shared/components/TitleGeneral.vue","webpack://gestor-gastos/./src/shared/components/TitleGeneral.vue?e83a","webpack://gestor-gastos/./src/shared/components/TitleGeneral.vue","webpack://gestor-gastos/./src/home/models/expense.js","webpack://gestor-gastos/./src/home/usecases/expensesUc.js","webpack://gestor-gastos/./src/shared/notification.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"l-title\",class:_vm.addClass},[_c('h2',{staticClass:\"main-title\"},[_vm._v(_vm._s(_vm.title))]),(_vm.backRoute)?_c('button',{staticClass:\"btn back-arrow\",on:{\"click\":function($event){return _vm.goToRoute(_vm.backRoute)}}},[_c('b-icon',{attrs:{\"icon\":\"arrow-left\"}})],1):_vm._e(),(_vm.addButtonRoute)?_c('button',{staticClass:\"btn btn-block button-rounded button-big button-outline-color-general\",on:{\"click\":function($event){return _vm.goToRoute(_vm.addButtonRoute)}}},[_vm._v(\"+\")]):_vm._e(),(_vm.addButtonFunction)?_c('button',{staticClass:\"btn btn-block button-rounded button-big button-outline-color-general\",on:{\"click\":function($event){return _vm.addButtonFunction()}}},[_vm._v(\"+\")]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"l-title\" :class=\"addClass\">\r\n      <h2 class=\"main-title\">{{ title }}</h2>\r\n\r\n      <button v-if=\"backRoute\" @click=\"goToRoute(backRoute)\" class=\"btn back-arrow\">\r\n        <b-icon icon=\"arrow-left\"></b-icon>\r\n      </button>\r\n\r\n      <button\r\n        v-if=\"addButtonRoute\"\r\n        @click=\"goToRoute(addButtonRoute)\"\r\n        class=\"btn btn-block button-rounded button-big button-outline-color-general\"\r\n      >+</button>\r\n\r\n      <button\r\n        v-if=\"addButtonFunction\"\r\n        @click=\"addButtonFunction()\"\r\n        class=\"btn btn-block button-rounded button-big button-outline-color-general\"\r\n      >+</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'TitleGeneral',\r\n\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n\r\n    backRoute: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n\r\n    addButtonRoute: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n\r\n    addButtonFunction: {\r\n      type: Function\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    addClass () {\r\n      return this.backRoute ? 'l-title-back' : ''\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    goToRoute (route) {\r\n      this.$router.push(route)\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TitleGeneral.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TitleGeneral.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TitleGeneral.vue?vue&type=template&id=e01daf90&\"\nimport script from \"./TitleGeneral.vue?vue&type=script&lang=js&\"\nexport * from \"./TitleGeneral.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default class Expense {\r\n  id = ''\r\n  amount = 0\r\n  description = ''\r\n  category = {}\r\n  date = ''\r\n  paid = false\r\n  fixed = false\r\n  repeat = false\r\n  repeatTimes = false\r\n  payments = []\r\n  type = 'credit'\r\n  editList = []\r\n  product = null\r\n\r\n  constructor (amount, description, category, date, fixed, paid, repeat, repeatTimes, type, product) {\r\n    this.amount = amount.replace('.', '')\r\n    this.description = description\r\n    this.category = category\r\n    this.date = date\r\n    this.paid = paid\r\n    this.fixed = fixed\r\n    this.repeat = repeat\r\n    this.repeatTimes = repeatTimes\r\n    this.type = type\r\n    this.product = product\r\n  }\r\n\r\n  static fromJSONResponse (json, id) {\r\n    const expense = new Expense(json.amount, json.description, json.category, json.date, json.fixed, json.paid, json.repeat, json.repeatTimes, json.type, json.product)\r\n    if (id) expense.setId(id)\r\n\r\n    return expense\r\n  }\r\n\r\n  getId () {\r\n    return this.id\r\n  }\r\n\r\n  setId (id) {\r\n    this.id = id\r\n\r\n    return this\r\n  }\r\n\r\n  getAmount () {\r\n    return this.amount\r\n  }\r\n\r\n  getDescription () {\r\n    return this.description\r\n  }\r\n\r\n  getCategory () {\r\n    return this.category\r\n  }\r\n\r\n  getDate () {\r\n    return this.date\r\n  }\r\n\r\n  isCredit () {\r\n    return this.type === 'credit'\r\n  }\r\n\r\n  isPaid () {\r\n    return this.paid\r\n  }\r\n\r\n  setpaid (paid) {\r\n    this.paid = paid\r\n\r\n    return this\r\n  }\r\n\r\n  isFixed () {\r\n    return this.fixed\r\n  }\r\n\r\n  isRepeat () {\r\n    return this.repeat\r\n  }\r\n\r\n  getRepeatTimes () {\r\n    return this.repeatTimes\r\n  }\r\n\r\n  setUser (email) {\r\n    this.user = email\r\n\r\n    return this\r\n  }\r\n\r\n  getPayments () {\r\n    return this.payments\r\n  }\r\n\r\n  setPayments (value) {\r\n    this.payments = value\r\n\r\n    return this\r\n  }\r\n\r\n  getObjectData (withId) {\r\n    const expenseObject = {\r\n      amount: this.amount.toString().replace('.', ''),\r\n      description: this.description,\r\n      category: this.category.getObjectData(true),\r\n      date: this.date,\r\n      paid: this.paid,\r\n      fixed: this.fixed,\r\n      repeat: this.repeat,\r\n      user: this.user,\r\n      type: this.type,\r\n      product: null\r\n    }\r\n\r\n    if (this.product) {\r\n      expenseObject.product = this.product.getObjectData(true)\r\n    }\r\n\r\n    if (this.repeat) {\r\n      expenseObject.repeatTimes = this.repeatTimes\r\n    }\r\n    if (this.fixed || this.repeat) {\r\n      expenseObject.payments = this.payments\r\n      expenseObject.editList = this.editList\r\n    }\r\n    if (withId) expenseObject.id = this.id\r\n\r\n    return expenseObject\r\n  }\r\n}\r\n","import Expense from '../models/expense'\r\nimport store from '@/store'\r\nimport { utils } from '@/shared/utils'\r\nimport AccountRepository from '@/accounts/models/accountRepository'\r\nimport SettingsUc from '@/shared/usecases/settings'\r\nimport moment from 'moment'\r\nimport ProductsUc from '@/products/usecases/productsUc'\r\n\r\nexport default class ExpensesUc {\r\n  #accountRepository\r\n  #settingsUc\r\n  #user\r\n  #productsUc\r\n\r\n  constructor () {\r\n    let user = JSON.parse(localStorage.getItem('currentUser'))\r\n    user = user.email\r\n\r\n    this.#accountRepository = new AccountRepository(user)\r\n    this.#settingsUc = new SettingsUc(user)\r\n    this.#productsUc = new ProductsUc()\r\n    this.#user = user\r\n  }\r\n\r\n  async addExpense (amountStr, description, category, date, fixedExpense, paid, repeat, times, type, product) {\r\n    const amount = amountStr.replaceAll('.', '')\r\n    const account = store.state.accountsStore.accountSelected\r\n    const accountExpenses = account.expenses\r\n    if (paid) paid = utils.getCurrentDate()\r\n\r\n    const expense = new Expense(amount, description, category, date, fixedExpense, paid, repeat, times, type, product)\r\n    expense.setUser(this.#user)\r\n\r\n    if (repeat) expense.setPayments(this.calculatePayments(amount, paid, date, times)).setpaid(false)\r\n    if (paid && fixedExpense) {\r\n      expense.setpaid(false)\r\n        .setPayments([{ number: 1, amount, date, paid: true }])\r\n    }\r\n    expense.setId(Date.now())\r\n\r\n    accountExpenses.unshift(expense.getObjectData(true))\r\n    account.setExpenses(accountExpenses)\r\n\r\n    try {\r\n      await this.#accountRepository.updateAccount(account.getObjectData(), account.getId())\r\n      this.#accountRepository.updateAccountToLocal(account.getObjectData(), account.getId())\r\n\r\n      this.#settingsUc.updateVersion()\r\n\r\n      return 'Agregado correctamente'\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  async paidExpense (editedExpense, indexPayment, paid, products) {\r\n    if (paid) paid = utils.getCurrentDate()\r\n    const account = store.state.accountsStore.accountSelected\r\n    const period = store.state.expensesStore.currentPeriod\r\n    const expenses = account.expenses\r\n\r\n    expenses.forEach((expense, index) => {\r\n      if (expense.id === editedExpense.id) {\r\n        if (editedExpense.fixed) {\r\n          if (paid) expenses[index].payments.push({ date: period, paid: true, amount: expense.amount })\r\n          else expenses[index].payments.splice(indexPayment, 1)\r\n        } else if (editedExpense.repeat) expenses[index].payments[indexPayment].paid = paid\r\n\r\n        else expenses[index].paid = paid\r\n      }\r\n    })\r\n\r\n    if (editedExpense.product) {\r\n      const indexProduct = products.findIndex(product => product.id === editedExpense.product.id)\r\n      if (indexProduct !== -1) {\r\n        const productAdd = products[indexProduct]\r\n        const productType = editedExpense.type === 'credit' ? 'debit' : 'credit'\r\n\r\n        if (paid) {\r\n          this.#productsUc.addExpense(\r\n            editedExpense.amount,\r\n            editedExpense.description,\r\n            editedExpense.category,\r\n            period,\r\n            productType,\r\n            productAdd,\r\n            editedExpense.id\r\n          )\r\n        } else {\r\n          const index2 = productAdd.expenses.findIndex(product => product.idAccount === editedExpense.id)\r\n          if (index2 !== -1) {\r\n            this.#productsUc.deleteExpense(productAdd.expenses[index2], productAdd)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    account.setExpenses(expenses)\r\n\r\n    try {\r\n      await this.#accountRepository.updateAccount(account.getObjectData(), account.getId())\r\n      this.#accountRepository.updateAccountToLocal(account.getObjectData(), account.getId())\r\n\r\n      this.#settingsUc.updateVersion()\r\n\r\n      return true\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  async editExpense (editedExpense, indexPayment, amountStr, description, category, date, fixedExpense, paid, repeat, times, allPayments, product) {\r\n    const amount = amountStr.replaceAll('.', '')\r\n    const account = store.state.accountsStore.accountSelected\r\n    const period = store.state.expensesStore.currentPeriod\r\n    const expenses = account.expenses\r\n\r\n    expenses.forEach((expense, index) => {\r\n      if (expense.id === editedExpense.id) {\r\n        editedExpense.description = description\r\n        editedExpense.category = category.getObjectData ? category.getObjectData(true) : category\r\n        editedExpense.date = date\r\n        editedExpense.product = product && product.getObjectData ? product.getObjectData(true) : null\r\n\r\n        if (fixedExpense || repeat) {\r\n          let editList = editedExpense.editList\r\n\r\n          let editDate = utils.getFirstDay(period)\r\n          if (allPayments) editDate = utils.getFirstDay(date)\r\n\r\n          const editElement = { date: editDate, amount }\r\n\r\n          if (allPayments) {\r\n            editList = []\r\n            editList.push(editElement)\r\n          } else {\r\n            const index = editList.findIndex(edit => edit.date === editDate)\r\n            if (index !== -1) editList[index] = editElement\r\n            else editList.push(editElement)\r\n          }\r\n\r\n          const newEditList = []\r\n          editList.forEach(editItem => {\r\n            if (moment(editItem.date).isSameOrBefore(editDate)) newEditList.push(editItem)\r\n          })\r\n\r\n          editedExpense.editList = newEditList\r\n        }\r\n\r\n        if (repeat && times !== editedExpense.times) {\r\n          const payments = editedExpense.payments\r\n\r\n          editedExpense.repeatTimes = times\r\n          const editedPayments = this.calculatePayments(amount, false, date, times)\r\n\r\n          editedPayments.forEach((payment, indexEdited) => {\r\n            const firstDay = utils.getFirstDay(payment.date)\r\n            const lastDay = utils.getLastDay(payment.date)\r\n\r\n            const index = payments.findIndex(pay => moment(pay.date).isBetween(firstDay, lastDay, undefined, '[]'))\r\n            if (index !== -1) editedPayments[indexEdited].paid = payments[index].paid\r\n          })\r\n\r\n          editedExpense.payments = editedPayments\r\n        }\r\n\r\n        if (!repeat && !fixedExpense) {\r\n          editedExpense.amount = amount\r\n        }\r\n\r\n        expenses[index] = editedExpense\r\n      }\r\n    })\r\n\r\n    account.setExpenses(expenses)\r\n\r\n    try {\r\n      await this.#accountRepository.updateAccount(account.getObjectData(), account.getId())\r\n      this.#accountRepository.updateAccountToLocal(account.getObjectData(), account.getId())\r\n\r\n      this.#settingsUc.updateVersion()\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  async deleteExpense (deleteExpense, all) {\r\n    const account = store.state.accountsStore.accountSelected\r\n    const period = store.state.expensesStore.currentPeriod\r\n    const expenses = account.expenses\r\n\r\n    const index = expenses.findIndex(expense => expense.id === deleteExpense.id)\r\n\r\n    if (all) {\r\n      expenses.splice(index, 1)\r\n    } else {\r\n      deleteExpense.paid = period\r\n      expenses[index] = deleteExpense\r\n    }\r\n\r\n    account.setExpenses(expenses)\r\n\r\n    try {\r\n      await this.#accountRepository.updateAccount(account.getObjectData(), account.getId())\r\n      this.#accountRepository.updateAccountToLocal(account.getObjectData(), account.getId())\r\n\r\n      this.#settingsUc.updateVersion()\r\n\r\n      return true\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  calculatePayments (amount, paid, initialDate, times) {\r\n    const payments = [{ number: 0, amount, date: initialDate, paid }]\r\n    let date = initialDate\r\n\r\n    for (let index = 0; index < times; index++) {\r\n      const newDate = utils.sumMonths(date, 1)\r\n      payments.push({\r\n        number: index + 1,\r\n        amount,\r\n        date: newDate,\r\n        paid: false\r\n      })\r\n\r\n      date = newDate\r\n    }\r\n\r\n    return payments\r\n  }\r\n}\r\n","import Vue from 'vue'\r\n\r\nexport default class Notification {\r\n  notify (message) {\r\n    return Vue.swal(message)\r\n  }\r\n\r\n  confirm (message, title = 'Confirmación!') {\r\n    return Vue.swal({\r\n      title: title,\r\n      text: message,\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Aceptar',\r\n      reverseButtons: true\r\n    })\r\n  }\r\n\r\n  selectOption (option1, option2, title = 'Seleccione una opción', color1 = '#d51212', color2 = '#4caf50') {\r\n    return Vue.swal({\r\n      title: title,\r\n      type: '',\r\n      showDenyButton: true,\r\n      showCancelButton: true,\r\n      confirmButtonColor: color1,\r\n      confirmButtonText: option1,\r\n      denyButtonText: option2,\r\n      denyButtonColor: color2,\r\n      cancelButtonText: 'Cancelar'\r\n    })\r\n  }\r\n}\r\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","class","addClass","_v","_s","title","on","$event","goToRoute","backRoute","attrs","_e","addButtonRoute","addButtonFunction","staticRenderFns","name","props","type","default","computed","methods","route","component","Expense","amount","description","category","date","fixed","paid","repeat","repeatTimes","product","replace","id","email","user","payments","value","withId","expenseObject","toString","getObjectData","editList","json","expense","setId","ExpensesUc","JSON","parse","localStorage","getItem","AccountRepository","SettingsUc","ProductsUc","amountStr","fixedExpense","times","replaceAll","account","store","accountExpenses","expenses","utils","setUser","setPayments","calculatePayments","setpaid","number","Date","now","unshift","setExpenses","updateAccount","getId","updateAccountToLocal","updateVersion","console","error","editedExpense","indexPayment","products","period","forEach","index","push","splice","indexProduct","findIndex","productAdd","productType","addExpense","index2","idAccount","deleteExpense","allPayments","editDate","editElement","edit","newEditList","editItem","moment","isSameOrBefore","editedPayments","payment","indexEdited","firstDay","lastDay","pay","isBetween","undefined","all","initialDate","newDate","Notification","message","Vue","text","showCancelButton","confirmButtonText","reverseButtons","option1","option2","color1","color2","showDenyButton","confirmButtonColor","denyButtonText","denyButtonColor","cancelButtonText"],"sourceRoot":""}