'use strict'; (self.webpackChunkgestor_gastos = self.webpackChunkgestor_gastos || []).push([[454], { 8701: function (t, e, n) { n.r(e), n.d(e, { default: function () { return Z } }); const o = function () { const t = this; const e = t.$createElement; const n = t._self._c || e; return n('div', { staticClass: 'l-content' }, [n('title-general', { attrs: { title: t.title, backRoute: '/accounts' } }), n('div', { staticClass: 'l-list' }, [n('input-general', { attrs: { label: 'Nombre', validate: t.validate }, model: { value: t.name, callback: function (e) { t.name = e }, expression: 'name' } }), n('icon-modal', { model: { value: t.icon, callback: function (e) { t.icon = e }, expression: 'icon' } }), n('icon-detail', { attrs: { icon: t.icon, iconColor: t.iconColor, validate: t.validate } }), t.icon ? n('color-modal', { attrs: { idModal: 'color-modal' }, model: { value: t.iconColor, callback: function (e) { t.iconColor = e }, expression: 'iconColor' } }) : t._e(), n('div', [n('button', { staticClass: 'btn button-color-general btn-block', on: { click: function (e) { return t.save() } } }, [t._v('Guardar')])])], 1)], 1) }; const c = []; const i = n(67906); const a = n(16198); const s = n(4367); const r = (n(73210), n(68309), n(9677)); const l = n(1160); const u = n(34665); const d = n(25099); const h = n(14511); const v = n(73727); const p = n(21654); const f = n(84998); const m = n(50761); const C = { name: 'SaveAccount', components: { TitleGeneral: d.Z, InputGeneral: v.Z, IconModal: p.Z, ColorModal: f.Z, IconDetail: m.Z }, data: function () { return { name: '', icon: '', iconColor: '', validate: !1, id: '', expenses: [], uc: new r.Z() } }, watch: { icon: function () { this.iconColor || (this.iconColor = '#000000') } }, computed: (0, s.Z)((0, s.Z)({ validData: function () { return this.icon.trim() !== '' && this.name.trim() !== '' }, title: function () { return this.id ? 'Editar presupuesto' : 'Nuevo presupuesto' } }, (0, u.rn)('accountsStore', ['accountSelected'])), (0, u.rn)('expensesStore', ['currentPeriod'])), methods: (0, s.Z)({ clear: function (t) { !t && this.id || (this.name = this.iconColor = this.icon = this.id = '', this.expenses = []), this.validate = !1 }, save: function () { const t = this; return (0, a.Z)((0, i.Z)().mark(function e () { let n; return (0, i.Z)().wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:if (t.validate = !0, !t.validData) { e.next = 17; break } return h.P.startLoading(), e.next = 5, t.uc.saveAccount(t.name, t.icon, t.iconColor, t.id, t.expenses); case 5:return n = e.sent, e.t0 = t, e.next = 9, t.uc.getAccounts(); case 9:return e.t1 = e.sent, e.next = 12, e.t0.setAccounts.call(e.t0, e.t1); case 12:return t.clear(), h.P.stopLoading(), e.next = 16, (new l.Z()).notify(n); case 16:t.$router.push('/'); case 17:case 'end':return e.stop() } }, e) }))() }, loadData: function () { let t; this.accountSelected !== null && (this.name = this.accountSelected.getName(), this.icon = (t = this.accountSelected) === null || void 0 === t ? void 0 : t.getIcon(), this.iconColor = this.accountSelected.getColor(), this.id = this.accountSelected.getId(), this.expenses = this.accountSelected.getExpenses(this.currentPeriod)) } }, (0, u.OI)('accountsStore', ['setAccounts'])), created: function () { this.loadData() }, beforeDestroy: function () { this.clear(!0) } }; const x = C; const b = n(1001); const g = (0, b.Z)(x, o, c, !1, null, null, null); var Z = g.exports } }])
// # sourceMappingURL=save-account-legacy.b06f374f.js.map
