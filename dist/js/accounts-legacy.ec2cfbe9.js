'use strict'; (self.webpackChunkgestor_gastos = self.webpackChunkgestor_gastos || []).push([[562], { 93633: function (t, e, n) { n.r(e), n.d(e, { default: function () { return p } }); const c = function () { const t = this; const e = t.$createElement; const n = t._self._c || e; return n('div', [n('title-general', { attrs: { title: 'Presupuesto' } }), n('div', { staticClass: 'l-content l-content--period' }, [n('select-period'), n('expenses-per-account', { attrs: { account: t.account } })], 1)], 1) }; const o = []; const s = n(4367); const r = (n(41539), n(54747), n(25099)); const u = n(34665); const a = n(66312); const i = n(24559); const l = { name: 'AccountsView', components: { TitleGeneral: r.Z, SelectPeriod: a.Z, ExpensesPerAccount: i.Z }, computed: (0, s.Z)((0, s.Z)({ totalDebit: function () { const t = this; let e = 0; return this.accounts.forEach(function (n) { e += n.getTotal(t.currentPeriod).total }), e }, totalBalance: function () { const t = this; let e = 0; return this.accounts.forEach(function (n) { e += n.getTotal(t.currentPeriod).balance }), e }, account: function () { return this.accounts.length > 0 ? this.accounts[0] : null } }, (0, u.rn)('accountsStore', ['accounts'])), (0, u.rn)('expensesStore', ['currentPeriod'])), methods: (0, s.Z)({}, (0, u.OI)('accountsStore', ['setAccountSelected'])), created: function () { this.setAccountSelected(this.account) } }; const h = l; const d = n(1001); const f = (0, d.Z)(h, c, o, !1, null, null, null); var p = f.exports } }])
// # sourceMappingURL=accounts-legacy.ec2cfbe9.js.map
